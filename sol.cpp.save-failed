#include "my_macros.h"

int solve(int arr[], int n){
    int lmax=INT_MIN, rmax=INT_MIN, i=0, j=n-1, l=0,r=0;

    if(arr[i]==arr[j]){
        return arr[i]*n;
    }
    else{
        l=i; r=j;
        lmax = arr[l]; rmax=arr[r];
        i++; j--;

        while(i<j){
            // fitting arr[i]
            if(abs(arr[l]-arr[i])<abs(arr[i]-arr[r])){
                i++;
                lmax = max(lmax, arr[i]);
            }
            else{
                j=i;
                rmax = max(rmax, arr[i]);
            }

            // fitting arr[j]
            if(abs(arr[l]-arr[j])>abs(arr[j]-arr[r])){
                j--;
                rmax = max(rmax, arr[j]);
            }
            else{
                i=j;
                lmax = max(lmax, arr[j]);
            }
        }

        return lmax*i+rmax*(n-j);

    }
}

int main(){

    fastio;

    int arr[] = {1,1,7,6,6,6};
    int n = sizeof(arr)/sizeof(arr[0]);

    DBx(solve(arr, n))

    return 0;

}
